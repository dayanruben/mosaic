// Klib ABI Dump
// Targets: [linuxArm64, linuxX64, macosArm64, macosX64, mingwX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.jakewharton.mosaic:mosaic-terminal>
sealed interface com.jakewharton.mosaic.terminal.event/Event // com.jakewharton.mosaic.terminal.event/Event|null[0]

sealed interface com.jakewharton.mosaic.terminal.event/KittyPointerQueryEvent : com.jakewharton.mosaic.terminal.event/Event // com.jakewharton.mosaic.terminal.event/KittyPointerQueryEvent|null[0]

final class com.jakewharton.mosaic.terminal.event/BracketedPasteEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent|null[0]
    constructor <init>(kotlin/Boolean) // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.<init>|<init>(kotlin.Boolean){}[0]

    final val start // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.start|{}start[0]
        final fun <get-start>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.start.<get-start>|<get-start>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/DebugEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/DebugEvent|null[0]
    constructor <init>(com.jakewharton.mosaic.terminal.event/Event, kotlin/ByteArray) // com.jakewharton.mosaic.terminal.event/DebugEvent.<init>|<init>(com.jakewharton.mosaic.terminal.event.Event;kotlin.ByteArray){}[0]

    final val bytes // com.jakewharton.mosaic.terminal.event/DebugEvent.bytes|{}bytes[0]
        final fun <get-bytes>(): kotlin/ByteArray // com.jakewharton.mosaic.terminal.event/DebugEvent.bytes.<get-bytes>|<get-bytes>(){}[0]
    final val event // com.jakewharton.mosaic.terminal.event/DebugEvent.event|{}event[0]
        final fun <get-event>(): com.jakewharton.mosaic.terminal.event/Event // com.jakewharton.mosaic.terminal.event/DebugEvent.event.<get-event>|<get-event>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/DebugEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/DebugEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/DebugEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/DecModeReportEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/DecModeReportEvent|null[0]
    constructor <init>(kotlin/Int, com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting) // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.<init>|<init>(kotlin.Int;com.jakewharton.mosaic.terminal.event.DecModeReportEvent.Setting){}[0]

    final val mode // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.mode|{}mode[0]
        final fun <get-mode>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.mode.<get-mode>|<get-mode>(){}[0]
    final val setting // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.setting|{}setting[0]
        final fun <get-setting>(): com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.setting.<get-setting>|<get-setting>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.toString|toString(){}[0]

    final enum class Setting : kotlin/Enum<com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting> { // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting|null[0]
        enum entry NotRecognized // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.NotRecognized|null[0]
        enum entry PermanentlyReset // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.PermanentlyReset|null[0]
        enum entry PermanentlySet // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.PermanentlySet|null[0]
        enum entry Reset // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.Reset|null[0]
        enum entry Set // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.Set|null[0]

        final val entries // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting> // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.entries.<get-entries>|<get-entries>#static(){}[0]

        final fun valueOf(kotlin/String): com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting> // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.values|values#static(){}[0]
    }
}

final class com.jakewharton.mosaic.terminal.event/FocusEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/FocusEvent|null[0]
    constructor <init>(kotlin/Boolean) // com.jakewharton.mosaic.terminal.event/FocusEvent.<init>|<init>(kotlin.Boolean){}[0]

    final val focused // com.jakewharton.mosaic.terminal.event/FocusEvent.focused|{}focused[0]
        final fun <get-focused>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/FocusEvent.focused.<get-focused>|<get-focused>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/FocusEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/FocusEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/FocusEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/KeyboardEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/KeyboardEvent|null[0]
    constructor <init>(kotlin/Int, kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/String? = ...) // com.jakewharton.mosaic.terminal.event/KeyboardEvent.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.String?){}[0]

    final val alt // com.jakewharton.mosaic.terminal.event/KeyboardEvent.alt|{}alt[0]
        final fun <get-alt>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.alt.<get-alt>|<get-alt>(){}[0]
    final val baseLayoutCodepoint // com.jakewharton.mosaic.terminal.event/KeyboardEvent.baseLayoutCodepoint|{}baseLayoutCodepoint[0]
        final fun <get-baseLayoutCodepoint>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.baseLayoutCodepoint.<get-baseLayoutCodepoint>|<get-baseLayoutCodepoint>(){}[0]
    final val capsLock // com.jakewharton.mosaic.terminal.event/KeyboardEvent.capsLock|{}capsLock[0]
        final fun <get-capsLock>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.capsLock.<get-capsLock>|<get-capsLock>(){}[0]
    final val codepoint // com.jakewharton.mosaic.terminal.event/KeyboardEvent.codepoint|{}codepoint[0]
        final fun <get-codepoint>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.codepoint.<get-codepoint>|<get-codepoint>(){}[0]
    final val ctrl // com.jakewharton.mosaic.terminal.event/KeyboardEvent.ctrl|{}ctrl[0]
        final fun <get-ctrl>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.ctrl.<get-ctrl>|<get-ctrl>(){}[0]
    final val eventType // com.jakewharton.mosaic.terminal.event/KeyboardEvent.eventType|{}eventType[0]
        final fun <get-eventType>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.eventType.<get-eventType>|<get-eventType>(){}[0]
    final val hyper // com.jakewharton.mosaic.terminal.event/KeyboardEvent.hyper|{}hyper[0]
        final fun <get-hyper>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.hyper.<get-hyper>|<get-hyper>(){}[0]
    final val meta // com.jakewharton.mosaic.terminal.event/KeyboardEvent.meta|{}meta[0]
        final fun <get-meta>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.meta.<get-meta>|<get-meta>(){}[0]
    final val modifiers // com.jakewharton.mosaic.terminal.event/KeyboardEvent.modifiers|{}modifiers[0]
        final fun <get-modifiers>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.modifiers.<get-modifiers>|<get-modifiers>(){}[0]
    final val numLock // com.jakewharton.mosaic.terminal.event/KeyboardEvent.numLock|{}numLock[0]
        final fun <get-numLock>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.numLock.<get-numLock>|<get-numLock>(){}[0]
    final val shift // com.jakewharton.mosaic.terminal.event/KeyboardEvent.shift|{}shift[0]
        final fun <get-shift>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.shift.<get-shift>|<get-shift>(){}[0]
    final val shiftedCodepoint // com.jakewharton.mosaic.terminal.event/KeyboardEvent.shiftedCodepoint|{}shiftedCodepoint[0]
        final fun <get-shiftedCodepoint>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.shiftedCodepoint.<get-shiftedCodepoint>|<get-shiftedCodepoint>(){}[0]
    final val super // com.jakewharton.mosaic.terminal.event/KeyboardEvent.super|{}super[0]
        final fun <get-super>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.super.<get-super>|<get-super>(){}[0]
    final val text // com.jakewharton.mosaic.terminal.event/KeyboardEvent.text|{}text[0]
        final fun <get-text>(): kotlin/String? // com.jakewharton.mosaic.terminal.event/KeyboardEvent.text.<get-text>|<get-text>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KeyboardEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/KeyboardEvent.toString|toString(){}[0]

    final object Companion { // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion|null[0]
        final const val EventTypePress // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.EventTypePress|{}EventTypePress[0]
            final fun <get-EventTypePress>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.EventTypePress.<get-EventTypePress>|<get-EventTypePress>(){}[0]
        final const val EventTypeRelease // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.EventTypeRelease|{}EventTypeRelease[0]
            final fun <get-EventTypeRelease>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.EventTypeRelease.<get-EventTypeRelease>|<get-EventTypeRelease>(){}[0]
        final const val EventTypeRepeat // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.EventTypeRepeat|{}EventTypeRepeat[0]
            final fun <get-EventTypeRepeat>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.EventTypeRepeat.<get-EventTypeRepeat>|<get-EventTypeRepeat>(){}[0]
        final const val ModifierAlt // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierAlt|{}ModifierAlt[0]
            final fun <get-ModifierAlt>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierAlt.<get-ModifierAlt>|<get-ModifierAlt>(){}[0]
        final const val ModifierCapsLock // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierCapsLock|{}ModifierCapsLock[0]
            final fun <get-ModifierCapsLock>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierCapsLock.<get-ModifierCapsLock>|<get-ModifierCapsLock>(){}[0]
        final const val ModifierCtrl // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierCtrl|{}ModifierCtrl[0]
            final fun <get-ModifierCtrl>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierCtrl.<get-ModifierCtrl>|<get-ModifierCtrl>(){}[0]
        final const val ModifierHyper // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierHyper|{}ModifierHyper[0]
            final fun <get-ModifierHyper>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierHyper.<get-ModifierHyper>|<get-ModifierHyper>(){}[0]
        final const val ModifierMeta // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierMeta|{}ModifierMeta[0]
            final fun <get-ModifierMeta>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierMeta.<get-ModifierMeta>|<get-ModifierMeta>(){}[0]
        final const val ModifierNumLock // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierNumLock|{}ModifierNumLock[0]
            final fun <get-ModifierNumLock>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierNumLock.<get-ModifierNumLock>|<get-ModifierNumLock>(){}[0]
        final const val ModifierShift // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierShift|{}ModifierShift[0]
            final fun <get-ModifierShift>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierShift.<get-ModifierShift>|<get-ModifierShift>(){}[0]
        final const val ModifierSuper // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierSuper|{}ModifierSuper[0]
            final fun <get-ModifierSuper>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KeyboardEvent.Companion.ModifierSuper.<get-ModifierSuper>|<get-ModifierSuper>(){}[0]
    }
}

final class com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent|null[0]
    constructor <init>(kotlin/Int) // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.<init>|<init>(kotlin.Int){}[0]

    final val disambiguateEscapeCodes // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.disambiguateEscapeCodes|{}disambiguateEscapeCodes[0]
        final fun <get-disambiguateEscapeCodes>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.disambiguateEscapeCodes.<get-disambiguateEscapeCodes>|<get-disambiguateEscapeCodes>(){}[0]
    final val flags // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.flags|{}flags[0]
        final fun <get-flags>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.flags.<get-flags>|<get-flags>(){}[0]
    final val reportAllKeysAsEscapeCodes // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAllKeysAsEscapeCodes|{}reportAllKeysAsEscapeCodes[0]
        final fun <get-reportAllKeysAsEscapeCodes>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAllKeysAsEscapeCodes.<get-reportAllKeysAsEscapeCodes>|<get-reportAllKeysAsEscapeCodes>(){}[0]
    final val reportAlternateKeys // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAlternateKeys|{}reportAlternateKeys[0]
        final fun <get-reportAlternateKeys>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAlternateKeys.<get-reportAlternateKeys>|<get-reportAlternateKeys>(){}[0]
    final val reportAssociatedText // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAssociatedText|{}reportAssociatedText[0]
        final fun <get-reportAssociatedText>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAssociatedText.<get-reportAssociatedText>|<get-reportAssociatedText>(){}[0]
    final val reportEventTypes // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportEventTypes|{}reportEventTypes[0]
        final fun <get-reportEventTypes>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportEventTypes.<get-reportEventTypes>|<get-reportEventTypes>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent : com.jakewharton.mosaic.terminal.event/KittyPointerQueryEvent { // com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent|null[0]
    constructor <init>(kotlin/String) // com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent.<init>|<init>(kotlin.String){}[0]

    final val name // com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent.name.<get-name>|<get-name>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/KittyPointerQueryNameEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent : com.jakewharton.mosaic.terminal.event/KittyPointerQueryEvent { // com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent|null[0]
    constructor <init>(kotlin/BooleanArray) // com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent.<init>|<init>(kotlin.BooleanArray){}[0]

    final val values // com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent.values|{}values[0]
        final fun <get-values>(): kotlin/BooleanArray // com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent.values.<get-values>|<get-values>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/KittyPointerQuerySupportEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent|null[0]
    constructor <init>(kotlin/Boolean) // com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent.<init>|<init>(kotlin.Boolean){}[0]

    final val ok // com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent.ok|{}ok[0]
        final fun <get-ok>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent.ok.<get-ok>|<get-ok>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/OperatingStatusResponseEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/PaletteColorEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/PaletteColorEvent|null[0]
    constructor <init>(kotlin/Int, kotlin/String) // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.<init>|<init>(kotlin.Int;kotlin.String){}[0]

    final val color // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.color|{}color[0]
        final fun <get-color>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.color.<get-color>|<get-color>(){}[0]
    final val value // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.value|{}value[0]
        final fun <get-value>(): kotlin/String // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/PaletteColorEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent|null[0]
    constructor <init>(kotlin/String) // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.<init>|<init>(kotlin.String){}[0]

    final val data // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.data|{}data[0]
        final fun <get-data>(): kotlin/String // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.data.<get-data>|<get-data>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/ResizeEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/ResizeEvent|null[0]
    constructor <init>(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int) // com.jakewharton.mosaic.terminal.event/ResizeEvent.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]

    final val columns // com.jakewharton.mosaic.terminal.event/ResizeEvent.columns|{}columns[0]
        final fun <get-columns>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/ResizeEvent.columns.<get-columns>|<get-columns>(){}[0]
    final val height // com.jakewharton.mosaic.terminal.event/ResizeEvent.height|{}height[0]
        final fun <get-height>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/ResizeEvent.height.<get-height>|<get-height>(){}[0]
    final val rows // com.jakewharton.mosaic.terminal.event/ResizeEvent.rows|{}rows[0]
        final fun <get-rows>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/ResizeEvent.rows.<get-rows>|<get-rows>(){}[0]
    final val width // com.jakewharton.mosaic.terminal.event/ResizeEvent.width|{}width[0]
        final fun <get-width>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/ResizeEvent.width.<get-width>|<get-width>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/ResizeEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/ResizeEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/ResizeEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/SystemThemeEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/SystemThemeEvent|null[0]
    constructor <init>(kotlin/Boolean) // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.<init>|<init>(kotlin.Boolean){}[0]

    final val isDark // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.isDark|{}isDark[0]
        final fun <get-isDark>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.isDark.<get-isDark>|<get-isDark>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/TerminalColorEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/TerminalColorEvent|null[0]
    constructor <init>(com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color, kotlin/String) // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.<init>|<init>(com.jakewharton.mosaic.terminal.event.TerminalColorEvent.Color;kotlin.String){}[0]

    final val color // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.color|{}color[0]
        final fun <get-color>(): com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.color.<get-color>|<get-color>(){}[0]
    final val value // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.value|{}value[0]
        final fun <get-value>(): kotlin/String // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.toString|toString(){}[0]

    final enum class Color : kotlin/Enum<com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color> { // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color|null[0]
        enum entry Background // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color.Background|null[0]
        enum entry Cursor // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color.Cursor|null[0]
        enum entry Foreground // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color.Foreground|null[0]

        final val entries // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color> // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color.entries.<get-entries>|<get-entries>#static(){}[0]

        final fun valueOf(kotlin/String): com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color> // com.jakewharton.mosaic.terminal.event/TerminalColorEvent.Color.values|values#static(){}[0]
    }
}

final class com.jakewharton.mosaic.terminal.event/TerminalVersionEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent|null[0]
    constructor <init>(kotlin/String) // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.<init>|<init>(kotlin.String){}[0]

    final val data // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.data|{}data[0]
        final fun <get-data>(): kotlin/String // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.data.<get-data>|<get-data>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/UnknownEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/UnknownEvent|null[0]
    constructor <init>(kotlin/ByteArray) // com.jakewharton.mosaic.terminal.event/UnknownEvent.<init>|<init>(kotlin.ByteArray){}[0]

    final val bytes // com.jakewharton.mosaic.terminal.event/UnknownEvent.bytes|{}bytes[0]
        final fun <get-bytes>(): kotlin/ByteArray // com.jakewharton.mosaic.terminal.event/UnknownEvent.bytes.<get-bytes>|<get-bytes>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/UnknownEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/UnknownEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/UnknownEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent|null[0]
    constructor <init>(kotlin/Int, kotlin/Int) // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

    final val columns // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.columns|{}columns[0]
        final fun <get-columns>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.columns.<get-columns>|<get-columns>(){}[0]
    final val rows // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.rows|{}rows[0]
        final fun <get-rows>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.rows.<get-rows>|<get-rows>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/XtermCharacterSizeEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent|null[0]
    constructor <init>(kotlin/Int, kotlin/Int) // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

    final val height // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.height|{}height[0]
        final fun <get-height>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.height.<get-height>|<get-height>(){}[0]
    final val width // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.width|{}width[0]
        final fun <get-width>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.width.<get-width>|<get-width>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/XtermPixelSizeEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal/TerminalReader : kotlin/AutoCloseable { // com.jakewharton.mosaic.terminal/TerminalReader|null[0]
    final val events // com.jakewharton.mosaic.terminal/TerminalReader.events|{}events[0]
        final fun <get-events>(): kotlinx.coroutines.channels/ReceiveChannel<com.jakewharton.mosaic.terminal.event/Event> // com.jakewharton.mosaic.terminal/TerminalReader.events.<get-events>|<get-events>(){}[0]

    final var kittyDisambiguateEscapeCodes // com.jakewharton.mosaic.terminal/TerminalReader.kittyDisambiguateEscapeCodes|{}kittyDisambiguateEscapeCodes[0]
        final fun <get-kittyDisambiguateEscapeCodes>(): kotlin/Boolean // com.jakewharton.mosaic.terminal/TerminalReader.kittyDisambiguateEscapeCodes.<get-kittyDisambiguateEscapeCodes>|<get-kittyDisambiguateEscapeCodes>(){}[0]
        final fun <set-kittyDisambiguateEscapeCodes>(kotlin/Boolean) // com.jakewharton.mosaic.terminal/TerminalReader.kittyDisambiguateEscapeCodes.<set-kittyDisambiguateEscapeCodes>|<set-kittyDisambiguateEscapeCodes>(kotlin.Boolean){}[0]
    final var xtermExtendedUtf8Mouse // com.jakewharton.mosaic.terminal/TerminalReader.xtermExtendedUtf8Mouse|{}xtermExtendedUtf8Mouse[0]
        final fun <get-xtermExtendedUtf8Mouse>(): kotlin/Boolean // com.jakewharton.mosaic.terminal/TerminalReader.xtermExtendedUtf8Mouse.<get-xtermExtendedUtf8Mouse>|<get-xtermExtendedUtf8Mouse>(){}[0]
        final fun <set-xtermExtendedUtf8Mouse>(kotlin/Boolean) // com.jakewharton.mosaic.terminal/TerminalReader.xtermExtendedUtf8Mouse.<set-xtermExtendedUtf8Mouse>|<set-xtermExtendedUtf8Mouse>(kotlin.Boolean){}[0]

    final fun close() // com.jakewharton.mosaic.terminal/TerminalReader.close|close(){}[0]
    final fun enableWindowResizeEvents() // com.jakewharton.mosaic.terminal/TerminalReader.enableWindowResizeEvents|enableWindowResizeEvents(){}[0]
    final fun interrupt() // com.jakewharton.mosaic.terminal/TerminalReader.interrupt|interrupt(){}[0]
    final fun runParseLoop() // com.jakewharton.mosaic.terminal/TerminalReader.runParseLoop|runParseLoop(){}[0]
}

final object com.jakewharton.mosaic.terminal/Tty { // com.jakewharton.mosaic.terminal/Tty|null[0]
    final fun enableRawMode(): kotlin/AutoCloseable // com.jakewharton.mosaic.terminal/Tty.enableRawMode|enableRawMode(){}[0]
    final fun terminalReader(kotlin/Boolean = ...): com.jakewharton.mosaic.terminal/TerminalReader // com.jakewharton.mosaic.terminal/Tty.terminalReader|terminalReader(kotlin.Boolean){}[0]
}
